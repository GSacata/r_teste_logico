ENUNCIADO
2.	Dada a seguinte arvore binária de palavras, faça uma função que busque nessa arvore pela palavra-chave. O output da sua função deve ser o caminho até chegar no item procurado. Por exemplo, se o input de buscar for “goiaba” o output deve ser uma string “Maça -> morango -> Goiaba”.


PASSOS
.Input da palavra buscada.
.Sistema de conferência de branches (se já foi ou não buscado).
.Jeito para criar a árvore facilmente.
.Flexibilidade de input (pessoa inserir "goiaba", a árvore vai considerar também a palavra "Goiaba")
.Busca ordenada (primeiro esquerda, depois direita).
.Saber reconhecer se é um node vazio ou se tem valor; saber reconhecer quando tem que voltar o caminho.


TESTES
[-] Proposta inicial, buscando "Goiaba".
[ ] Buscar palavra inexistente.
[-] Conferir no olho o caminho escrito.
[-] Buscar palavra na primeira folha.
[-] Buscar palavra na folha mais distante.
[-] Buscar palavra na folha à direita (segunda busca de um node).
[ ] Alterar árvore inicial, e ver se o programa todo responde a essa alteração.
[ ] Buscar por palavra existente, mas "variada" (ex.: lowercase, traço no meio...)
[ ] Escrita de caminho, caminho direto ("Goiaba", tudo à esquerda)
[ ] Escrita de caminho, caminho corrigido ("Limão", precisa apagar Goiaba do caminho)



REFERÊNCIAS
https://github.com/GSacata/teste-logica-datacake/blob/master/pergunta_2.py


NOTAS
